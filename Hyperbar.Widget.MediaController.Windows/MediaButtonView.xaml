<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="Hyperbar.Widget.MediaController.Windows.MediaButtonView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:triggers="using:CommunityToolkit.WinUI">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ButtonBackground" Color="Transparent" />
        <SolidColorBrush x:Key="ButtonBorderBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent" />
        <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent" />
        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent" />
        <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent" />
        <Thickness x:Key="ButtonPadding">0</Thickness>
        <x:Double x:Key="ButtonWidth">40</x:Double>
        <x:Double x:Key="ButtonHeight">40</x:Double>
    </UserControl.Resources>
    <Button
        x:Name="Button"
        Width="{ThemeResource ButtonWidth}"
        Height="{ThemeResource ButtonHeight}"
        Padding="{ThemeResource ButtonPadding}"
        Command="{x:Bind ViewModel.InvokeCommand}"
        FontFamily="{ThemeResource SymbolThemeFontFamily}"
        FontSize="16"
        IsEnabled="False">
        <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="Loaded">
                <interactions:InvokeCommandAction Command="{x:Bind ViewModel.InitializeCommand}" />
            </interactions:EventTriggerBehavior>
        </interactivity:Interaction.Behaviors>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="MediaPreviousButtonState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Button}" To="MediaPreviousButton" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button.Content" Value="&#xE892;" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediaNextButtonState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Button}" To="MediaNextButton" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button.Content" Value="&#xE893;" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="EnabledState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding State}" To="Enabled" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PlayingState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding State}" To="Playing" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button.Content" Value="&#xE769;" />
                        <Setter Target="Button.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PausedState">
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding State}" To="Paused" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Button.Content" Value="&#xE768;" />
                        <Setter Target="Button.IsEnabled" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Button>
</UserControl>
